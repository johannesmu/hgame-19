{"version":3,"sources":["app.js","functions.js"],"names":["windDirection","player","dropRate","playerAlive","stage","canvas","info","payLoads","Array","initApp","initStage","resizeCanvas","gameContainer","document","getElementById","containerHeight","clientHeight","containerWidth","clientWidth","setAttribute","canvasData","instance","width","height","elm","createjs","Stage","initTimer","rate","timer","Ticker","useRAF","framerate","setupPlayer","loadImage","then","image","spriteSheetData","images","frames","animations","fly","dropping","dead","spriteSheet","SpriteSheet","animation","Sprite","catch","err","playerDefault","url","Promise","resolve","reject","Image","addEventListener","src","getControlsConfig","request","XMLHttpRequest","overrideMimeType","onreadystatechange","rs","readyState","status","data","JSON","parse","responseText","open","send","createPayload","pX","x","pY","y","console","log","graphic","Graphics","beginFill","drawRect","Shape","managePayLoads","payLoadsArray","gameCanvas","gameStage","forEach","payload","obj","shift","removeChild","getRandom","limit","Math","round","random","window","querySelector","windowWidth","canvasElement","playerObj","scaleX","scaleY","gotoAndPlay","addChild","update","config","up","down","drop","event","keyCode","length","push","on","innerText","toFixed"],"mappings":"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","file":"../main.min.js","sourcesContent":["let windDirection = 1;\r\nlet player = null;\r\nlet dropRate = 1;\r\nlet playerAlive = true;\r\nlet stage = null;\r\nlet canvas = null;\r\nlet info = null;\r\nlet payLoads = new Array();\r\n\r\n//in case window gets resized\r\nwindow.addEventListener('resize', () => {\r\n  canvas = resizeCanvas();\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n  canvas = resizeCanvas();\r\n  initApp();\r\n  info = document.querySelector('#info');\r\n  const windowWidth = document.querySelector('#game-container').clientWidth;\r\n  const windowHeight = document.querySelector('#game-container').clientHeight;\r\n  const canvasElement = document.querySelector('#main-canvas');\r\n  stage = initStage(canvasElement);\r\n  setupPlayer()\r\n    .then((playerObj) => {\r\n      player = playerObj;\r\n      player.x = windowWidth / 2;\r\n      player.y = 100;\r\n      player.scaleX = 0.5;\r\n      player.scaleY = 0.5;\r\n      player.gotoAndPlay('fly');\r\n      stage.addChild(player);\r\n      stage.update();\r\n    });\r\n\r\n  getControlsConfig('data/controls.json')\r\n    .then((config) => {\r\n      if (config) {\r\n        console.log(config.up, config.down, config.drop);\r\n        window.addEventListener('keydown', (event) => {\r\n          if (event.keyCode == config.up) {\r\n            console.log('upping');\r\n          }\r\n          else if (event.keyCode == config.down) {\r\n            console.log('downing');\r\n          }\r\n          else if (event.keyCode == config.drop) {\r\n            console.log('dropping');\r\n            if (payLoads.length < 1) {\r\n              let payload = createPayload(player);\r\n              stage.addChild(payload);\r\n              payLoads.push(payload);\r\n            }\r\n          }\r\n        })\r\n      }\r\n    })\r\n    .catch(() => { })\r\n\r\n  // initialise timer\r\n  const timer = initTimer(60);\r\n  timer.on('tick', () => {\r\n    info.innerText = timer.framerate.toFixed(2);\r\n    managePayLoads(payLoads, canvas, stage);\r\n    stage.update();\r\n  })\r\n})","function initApp() {\r\n  initStage();\r\n}\r\n\r\nfunction resizeCanvas() {\r\n  //get container width and height\r\n  const gameContainer = document.getElementById('game-container');\r\n  const containerHeight = gameContainer.clientHeight;\r\n  const containerWidth = gameContainer.clientWidth;\r\n  // set canvas width and height\r\n  const canvas = document.getElementById('main-canvas');\r\n  canvas.setAttribute('width', containerWidth);\r\n  canvas.setAttribute('height', (containerHeight - 5));\r\n  // return canvas object + data\r\n  canvasData = { \"instance\": canvas, \"width\" : containerWidth, \"height\" : containerHeight };\r\n  return canvasData;\r\n}\r\n\r\nfunction initStage(elm) {\r\n  // initialise canvas\r\n  const stage = new createjs.Stage(elm);\r\n  return stage;\r\n}\r\n\r\nfunction initTimer(rate) {\r\n  const timer = createjs.Ticker;\r\n  timer.useRAF = true;\r\n  timer.framerate = rate;\r\n  return timer;\r\n}\r\n\r\nfunction setupPlayer() {\r\n  return loadImage(\"assets/sprites/player/sprite2X.png\")\r\n    .then((image) => {\r\n      const spriteSheetData = {\r\n        images: [image],\r\n        frames: {\r\n          width: 400,\r\n          height: 300\r\n        },\r\n        animations: {\r\n          fly: [0, 49],\r\n          dropping: [6],\r\n          dead: [7]\r\n        }\r\n      };\r\n      const spriteSheet = new createjs.SpriteSheet(spriteSheetData);\r\n      const animation = new createjs.Sprite(spriteSheet, \"fly\");\r\n      const player = new createjs.Sprite(spriteSheet, animation);\r\n      return player;\r\n    })\r\n    .catch((err) => {\r\n      return null;\r\n    })\r\n}\r\n\r\nfunction playerDefault() {\r\n\r\n}\r\n\r\nfunction loadImage(url) {\r\n  return new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    image.addEventListener('load', () => {\r\n      resolve(image);\r\n    })\r\n    image.addEventListener('error', (err) => reject(err))\r\n    image.src = url;\r\n  })\r\n}\r\n\r\nfunction getControlsConfig( url ) {\r\n  //return a promise\r\n  return new Promise((resolve, reject) => {\r\n    const request = new XMLHttpRequest();\r\n    request.overrideMimeType('text/json');\r\n    request.onreadystatechange = () => {\r\n      const rs = request.readyState;\r\n      if (rs == 4 || rs == 0) {\r\n        if (request.status == 200) {\r\n          let data = ( JSON.parse( request.responseText ) ) ? JSON.parse( request.responseText ) : false;\r\n          resolve(data)\r\n        }\r\n        else{\r\n          reject(false);\r\n        }\r\n      }\r\n    }\r\n    request.open('GET', url );\r\n    request.send();\r\n  })\r\n}\r\n\r\nfunction createPayload( player ) {\r\n  // get player position\r\n  const pX = player.x;\r\n  const pY = player.y;\r\n  // spawn a load\r\n  console.log(pX,pY);\r\n  const graphic = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(pX, pY+100, 50, 50);\r\n  const load = new createjs.Shape(graphic);\r\n  return load;\r\n}\r\n\r\nfunction managePayLoads( payLoadsArray, gameCanvas, gameStage ) {\r\n  payLoadsArray.forEach(\r\n    (payload) => {\r\n      payload.x = payload.x + windDirection;\r\n      payload.y = payload.y + dropRate;\r\n      // if payload is outside the canvas\r\n      // console.log( );\r\n      if( payload.x > gameCanvas.width || payload.x < 0 || payload.y > gameCanvas.height ) {\r\n        let obj = payLoadsArray.shift();\r\n        gameStage.removeChild(obj);\r\n        console.log('payload removed');\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n\r\nfunction getRandom(limit) {\r\n  return Math.round(Math.random() * limit);\r\n}"]}